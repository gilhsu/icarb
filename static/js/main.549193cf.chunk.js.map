{"version":3,"sources":["components/Home.js","components/containers/SubtotalContainer.js","components/tiles/OptionBlock.js","components/tiles/OptionCheckBlock.js","data/pizzaConstants.js","data/generalConstants.js","modules/pizzas.js","components/Order.js","components/NotFound.js","components/Nav.js","components/Checkout.js","App.js","serviceWorker.js","store/rootReducer.js","index.js","store/configureStore.js"],"names":["Home","history","useHistory","className","Container","Button","onClick","push","SubtotalContainer","displayItems","items","map","item","Row","key","id","md","name","value","Col","OptionBlock","title","options","subOptionBlock","sizeBlock","selectFunction","displayTitleClass","displayOptionBlockClass","displayOptions","option","displayPrice","displayValue","mdDisplayValue","variant","disabled","active","OptionCheckBlock","Form","Check","type","label","alert","convertToDisplayValue","toFixed","pizzaList","img","mdValue","lgValue","lgDisplayValue","convertPizzaSizeDisplayValue","pizzaSize","crustType","initialState","setSelection","array","newArray","concat","forEach","connect","state","pizzas","dispatch","chooseSize","sizeId","chooseCrust","cheesePizzas","filter","pizza","vegPizzas","meatPizzas","Image","src","selected","block","NotFound","Nav","Navbar","expand","bg","Brand","style","height","width","viewBox","fill","xmlns","d","props","displayPizzas","App","store","component","path","exact","Order","Checkout","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","newPizzaSize","newCrustType","createStore","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.549193cf.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container, Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router\";\n\nconst Home = () => {\n  const history = useHistory();\n  const handleToOrder = () => {\n    history.push(\"/icarb/pizza/1\");\n  };\n\n  return (\n    <div className=\"hero\">\n      <Container>\n        <div className=\"fs-1 fw-5 mt-5 mb-3 \">iCarb Pizza</div>\n        <div className=\"fs-3 fw-4 mt-2\">Because everyday can be cheat day.</div>\n        <div className=\"fs-3 fw-4 mt-2\">Starting at $11.50</div>\n        <Button className=\"mt-4\" onClick={handleToOrder}>\n          Order Now\n        </Button>\n      </Container>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst SubtotalContainer = ({ items }) => {\n  const displayItems = items.map((item) => {\n    return (\n      <Row\n        key={item.id}\n        md={12}\n        className=\"d-flex justify-content-between my-2\"\n      >\n        <div>{item.name}</div>\n        <div>{item.value}</div>\n      </Row>\n    );\n  });\n  return (\n    <Container className=\"subtotal-container mb-3\">\n      <Row className=\"subtotal-title py-2 fw-5 d-flex justify-content-between\">\n        <div>Pizza Subtotal</div>\n        <div>$100.00</div>\n      </Row>\n      <Row>\n        <Col className=\"display-items-container\">{displayItems}</Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default SubtotalContainer;\n","import React from \"react\";\nimport { Button, Row, Container } from \"react-bootstrap\";\n\nconst OptionBlock = ({\n  title,\n  options,\n  subOptionBlock = null,\n  sizeBlock = null,\n  selectFunction,\n}) => {\n  let displayTitleClass = \"my-3 fw-5\";\n  let displayOptionBlockClass = \"option-block\";\n  if (subOptionBlock) {\n    displayTitleClass = \"my-3 fs-4\";\n    displayOptionBlockClass = \"suboption-block\";\n  }\n\n  const displayOptions = options.map((option) => {\n    let displayPrice = sizeBlock ? option.displayValue : option.mdDisplayValue;\n    return (\n      <Row key={option.id}>\n        <Button\n          className=\"option-button d-flex justify-content-between\"\n          variant=\"outline-primary\"\n          disabled={option.disabled}\n          active={option.active}\n          onClick={() => selectFunction(option.id)}\n        >\n          <span>{option.name}</span>\n          <span>{displayPrice}</span>\n        </Button>\n      </Row>\n    );\n  });\n  return (\n    <div className={displayOptionBlockClass}>\n      <div className={displayTitleClass}>{title}</div>\n      <Container>{displayOptions}</Container>\n    </div>\n  );\n};\n\nexport default OptionBlock;\n","import React from \"react\";\nimport { Form, Col, Row } from \"react-bootstrap\";\n\nconst OptionCheckBlock = ({ title, options }) => {\n  const displayOptions = options.map((option) => {\n    return (\n      <Col key={option.id} md={6} className=\"mb-2\">\n        <Form.Check\n          type=\"checkbox\"\n          id={option.name}\n          label={option.name}\n          onClick={() => alert(`You selected ${option.name}!`)}\n        />\n      </Col>\n    );\n  });\n  return (\n    <div className=\"option-block\">\n      <div className=\"my-3 fw-5\">{title}</div>\n      <Row>{displayOptions}</Row>\n    </div>\n  );\n};\n\nexport default OptionCheckBlock;\n","const BASE = 0;\nconst MD_VALUE_1 = 150;\nconst MD_VALUE_2 = 250;\nconst LG_VALUE_1 = 300;\nconst LG_VALUE_2 = 500;\n\nexport const convertToDisplayValue = (value) => {\n  return `+$${(value / 100).toFixed(2)}`;\n};\n\nexport const pizzaList = [\n  {\n    id: 1,\n    name: \"Cheese\",\n    img: \"cheese.jpeg\",\n    type: \"cheese\",\n    mdValue: BASE,\n    lgValue: BASE,\n    mdDisplayValue: convertToDisplayValue(BASE),\n    lgDisplayValue: convertToDisplayValue(BASE),\n    active: false,\n    disabled: false,\n  },\n  {\n    id: 2,\n    name: \"Three Cheese Tortellini\",\n    img: \"three-cheese-tortellini.jpeg\",\n    type: \"cheese\",\n    mdValue: MD_VALUE_1,\n    lgValue: LG_VALUE_1,\n    mdDisplayValue: convertToDisplayValue(MD_VALUE_1),\n    lgDisplayValue: convertToDisplayValue(LG_VALUE_1),\n    active: false,\n    disabled: false,\n  },\n  {\n    id: 3,\n    name: \"Four Cheese\",\n    img: \"four-cheese.jpeg\",\n    type: \"cheese\",\n    mdValue: MD_VALUE_2,\n    lgValue: LG_VALUE_2,\n    mdDisplayValue: convertToDisplayValue(MD_VALUE_2),\n    lgDisplayValue: convertToDisplayValue(LG_VALUE_2),\n    active: false,\n    disabled: false,\n  },\n  {\n    id: 4,\n    name: \"Basil & Ricotta\",\n    img: \"ricotta-basil.jpeg\",\n    type: \"veg\",\n    mdValue: MD_VALUE_1,\n    lgValue: LG_VALUE_1,\n    mdDisplayValue: convertToDisplayValue(MD_VALUE_1),\n    lgDisplayValue: convertToDisplayValue(LG_VALUE_1),\n    active: false,\n    disabled: false,\n  },\n  {\n    id: 5,\n    name: \"Baby Spinach, Red Peppadew and Goat Cheese\",\n    img: \"baby-spinach-red-peppadew-goat-cheese.jpeg\",\n    type: \"veg\",\n    mdValue: MD_VALUE_2,\n    lgValue: LG_VALUE_2,\n    mdDisplayValue: convertToDisplayValue(MD_VALUE_2),\n    lgDisplayValue: convertToDisplayValue(LG_VALUE_2),\n    active: false,\n    disabled: false,\n  },\n  {\n    id: 6,\n    name: \"Butternut Squash, Ricotta & Cranberry\",\n    img: \"butternut-squash-ricotta-cranberry.jpeg\",\n    type: \"veg\",\n    mdValue: MD_VALUE_2,\n    lgValue: LG_VALUE_2,\n    mdDisplayValue: convertToDisplayValue(MD_VALUE_2),\n    lgDisplayValue: convertToDisplayValue(LG_VALUE_2),\n    active: false,\n    disabled: false,\n  },\n  {\n    id: 7,\n    name: \"Fresh Mushrooms & Roasted Cauliflower\",\n    img: \"mushroom-roast-cauliflower.jpeg\",\n    type: \"veg\",\n    mdValue: MD_VALUE_2,\n    lgValue: LG_VALUE_2,\n    mdDisplayValue: convertToDisplayValue(MD_VALUE_2),\n    lgDisplayValue: convertToDisplayValue(LG_VALUE_2),\n    active: false,\n    disabled: false,\n  },\n  {\n    id: 8,\n    name: \"Spinach, Kalamata Olive & Roasted Garlic\",\n    img: \"spinach-kalamata-olive-roasted-garlic.jpeg\",\n    type: \"veg\",\n    mdValue: MD_VALUE_2,\n    lgValue: LG_VALUE_2,\n    mdDisplayValue: convertToDisplayValue(MD_VALUE_2),\n    lgDisplayValue: convertToDisplayValue(LG_VALUE_2),\n    active: false,\n    disabled: false,\n  },\n  {\n    id: 9,\n    name: \"Pepperoni\",\n    img: \"pepperoni.jpeg\",\n    type: \"meat\",\n    mdValue: MD_VALUE_1,\n    lgValue: LG_VALUE_1,\n    mdDisplayValue: convertToDisplayValue(MD_VALUE_1),\n    lgDisplayValue: convertToDisplayValue(LG_VALUE_1),\n    active: false,\n    disabled: false,\n  },\n  {\n    id: 10,\n    name: \"Chicken, Roasted Pears & Fontina\",\n    img: \"chicken-roasted-pear-fontina.jpeg\",\n    type: \"meat\",\n    mdValue: MD_VALUE_2,\n    lgValue: LG_VALUE_2,\n    mdDisplayValue: convertToDisplayValue(MD_VALUE_2),\n    lgDisplayValue: convertToDisplayValue(LG_VALUE_2),\n    active: false,\n    disabled: false,\n  },\n  {\n    id: 11,\n    name: \"Fresh Pineapple, Bacon & Hot Honey\",\n    img: \"pineapple-bacon-hot-honey.jpeg\",\n    type: \"meat\",\n    mdValue: MD_VALUE_2,\n    lgValue: LG_VALUE_2,\n    mdDisplayValue: convertToDisplayValue(MD_VALUE_2),\n    lgDisplayValue: convertToDisplayValue(LG_VALUE_2),\n    active: false,\n    disabled: false,\n  },\n  {\n    id: 12,\n    name: \"Pulled Pork & Mango\",\n    img: \"pulled-pork-mango.jpeg\",\n    type: \"meat\",\n    mdValue: MD_VALUE_2,\n    lgValue: LG_VALUE_2,\n    mdDisplayValue: convertToDisplayValue(MD_VALUE_2),\n    lgDisplayValue: convertToDisplayValue(LG_VALUE_2),\n    active: false,\n    disabled: false,\n  },\n  {\n    id: 13,\n    name: \"Sriracha Chicken & Avocado\",\n    img: \"sriracha-chicken-avocado.jpeg\",\n    type: \"meat\",\n    mdValue: MD_VALUE_2,\n    lgValue: LG_VALUE_2,\n    mdDisplayValue: convertToDisplayValue(MD_VALUE_2),\n    lgDisplayValue: convertToDisplayValue(LG_VALUE_2),\n    active: false,\n    disabled: false,\n  },\n];\n","import { convertToDisplayValue } from \"./pizzaConstants\";\n\nconst MEDIUM = 1150;\nconst LARGE = 1650;\nconst REG_CRUST = 0;\nconst MD_GF_CRUST = 200;\nconst LG_GF_CRUST = 300;\n\nconst convertPizzaSizeDisplayValue = (value) => {\n  return `$${(value / 100).toFixed(2)}`;\n};\n\nexport const pizzaSize = [\n  {\n    id: 1,\n    name: \"Medium (12-inch)\",\n    value: MEDIUM,\n    displayValue: convertPizzaSizeDisplayValue(MEDIUM),\n    active: false,\n    disabled: false,\n  },\n  {\n    id: 2,\n    name: \"Large (16-inch)\",\n    value: LARGE,\n    displayValue: convertPizzaSizeDisplayValue(LARGE),\n    active: false,\n    disabled: false,\n  },\n];\n\nexport const crustType = [\n  {\n    id: 1,\n    name: \"Regular\",\n    mdValue: REG_CRUST,\n    lgValue: REG_CRUST,\n    mdDisplayValue: convertToDisplayValue(REG_CRUST),\n    lgDisplayValue: convertToDisplayValue(REG_CRUST),\n    active: false,\n    disabled: false,\n  },\n  {\n    id: 2,\n    name: \"Gluten-free\",\n    mdValue: MD_GF_CRUST,\n    lgValue: LG_GF_CRUST,\n    mdDisplayValue: convertToDisplayValue(MD_GF_CRUST),\n    lgDisplayValue: convertToDisplayValue(LG_GF_CRUST),\n    active: false,\n    disabled: false,\n  },\n];\n","import { pizzaList } from \"../data/pizzaConstants\";\nimport { pizzaSize, crustType } from \"../data/generalConstants\";\n\n// Action type constants\nconst CHOOSE_SIZE = \"CHOOSE_SIZE\";\nconst CHOOSE_CRUST = \"CHOOSE_CRUST\";\n\n// Action creators\n\nconst chooseSize = (id) => {\n  return {\n    type: CHOOSE_SIZE,\n    id,\n  };\n};\n\nconst chooseCrust = (id) => {\n  return {\n    type: CHOOSE_CRUST,\n    id,\n  };\n};\n\n// Reducer and its initialState\n\nconst initialState = {\n  pizzaSize,\n  crustType,\n  pizzaList,\n};\n\nconst setSelection = (array, id) => {\n  const newArray = array.concat();\n  newArray.forEach((item) => {\n    if (item.id === id) {\n      item[\"active\"] = true;\n    } else {\n      item[\"active\"] = false;\n    }\n  });\n  return newArray;\n};\n\nconst pizzas = (state = initialState, action) => {\n  switch (action.type) {\n    case CHOOSE_SIZE:\n      const newPizzaSize = setSelection(state.pizzaSize, action.id);\n      return { ...state, pizzaSize: newPizzaSize };\n    case CHOOSE_CRUST:\n      const newCrustType = setSelection(state.crustType, action.id);\n      return { ...state, crustType: newCrustType };\n    default:\n      return state;\n  }\n};\n\n// Export statement\n\nexport { pizzas, chooseSize, chooseCrust };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col, Button, Image } from \"react-bootstrap\";\nimport { useHistory } from \"react-router\";\nimport SubtotalContainer from \"./containers/SubtotalContainer\";\nimport OptionBlock from \"./tiles/OptionBlock\";\nimport OptionCheckBlock from \"./tiles/OptionCheckBlock\";\nimport { chooseSize, chooseCrust } from \"../modules/pizzas\";\n\nconst Order = ({\n  pizzaSize,\n  crustType,\n  pizzaList,\n  chooseSize,\n  chooseCrust,\n}) => {\n  const history = useHistory();\n  const cheesePizzas = pizzaList.filter((pizza) => pizza.type === \"cheese\");\n  const vegPizzas = pizzaList.filter((pizza) => pizza.type === \"veg\");\n  const meatPizzas = pizzaList.filter((pizza) => pizza.type === \"meat\");\n\n  const handleContinue = () => {\n    history.push(\"/icarb/checkout\");\n  };\n\n  return (\n    <Container className=\"mt-5 mx-auto\">\n      <Row>\n        <Col md={6}>\n          <Image className=\"preview-img mb-3\" src=\"/icarb/images/cheese.jpeg\" />\n          <SubtotalContainer\n            items={[\n              {\n                id: 1,\n                name: \"Sriracha Chicken & Avocado\",\n                value: \"+$3.50\",\n                selected: false,\n                disabled: false,\n              },\n              {\n                id: 2,\n                name: \"Spicy Pulled Pork with Scallion\",\n                value: \"+$3.50\",\n                selected: false,\n                disabled: false,\n              },\n              {\n                id: 3,\n                name: \"Sriracha Chicken & Avocado\",\n                value: \"+$3.50\",\n                selected: false,\n                disabled: false,\n              },\n              {\n                id: 4,\n                name: \"Spicy Pulled Pork with Scallion\",\n                value: \"+$3.50\",\n                selected: false,\n                disabled: false,\n              },\n              {\n                id: 5,\n                name: \"Sriracha Chicken & Avocado\",\n                value: \"+$3.50\",\n                selected: false,\n                disabled: false,\n              },\n            ]}\n          />\n          <div className=\"line-below\">\n            <Button className=\"mb-3\" block={true} onClick={handleContinue}>\n              Continue\n            </Button>\n            <Button\n              className=\"mb-3\"\n              variant=\"outline-info\"\n              block={true}\n              onClick={() => alert(\"add to cart\")}\n            >\n              Add To Cart & Build Another\n            </Button>\n          </div>\n          <Button\n            variant=\"outline-danger\"\n            block={true}\n            onClick={() => alert(\"reset\")}\n          >\n            Reset Order\n          </Button>\n        </Col>\n        <Col md={6} className=\"order-options-column\">\n          <div className=\"fs-2 fw-5\">Start Order</div>\n          <div className=\"mb-5\">\n            Select from our list of gourmet pies or build your own.\n          </div>\n          <OptionBlock\n            title=\"Choose your size.\"\n            options={pizzaSize}\n            sizeBlock={true}\n            selectFunction={chooseSize}\n          />\n          <OptionBlock\n            title=\"Choose your crust.\"\n            options={crustType}\n            selectFunction={chooseCrust}\n          />\n          <div className=\"option-block\">\n            <div className=\"my-3 fw-5\">Choose from our House Specials.</div>\n            <OptionBlock\n              title=\"Cheese\"\n              subOptionBlock={true}\n              options={cheesePizzas}\n            />\n            <OptionBlock\n              title=\"Veggie\"\n              subOptionBlock={true}\n              options={vegPizzas}\n            />\n            <OptionBlock\n              title=\"Meat\"\n              subOptionBlock={true}\n              options={meatPizzas}\n            />\n          </div>\n          <OptionCheckBlock\n            title=\"Choose extra toppings. +$2.50 each\"\n            options={[\n              { id: 1, name: \"Avocado\" },\n              { id: 2, name: \"Bacon\" },\n              { id: 3, name: \"Basil\" },\n              { id: 4, name: \"Buffalo Cauliflower\" },\n              { id: 5, name: \"Butternut Squash\" },\n              { id: 6, name: \"Caramelized Pears\" },\n              { id: 7, name: \"Cauliflower\" },\n              { id: 8, name: \"Cranberry\" },\n              { id: 9, name: \"Eggplant\" },\n              { id: 10, name: \"Fresh Pineapple\" },\n              { id: 11, name: \"Green Pepper\" },\n              { id: 12, name: \"Hot Honey\" },\n              { id: 13, name: \"Kalamata Olives\" },\n              { id: 14, name: \"Mango\" },\n              { id: 15, name: \"Mashed Potato\" },\n              { id: 16, name: \"Mushroom Medley\" },\n              { id: 17, name: \"Pepperoni\" },\n              { id: 18, name: \"Pulled Pork\" },\n              { id: 19, name: \"Red Peppadew Pepper\" },\n              { id: 20, name: \"Roasted Chicken\" },\n              { id: 21, name: \"Roasted Garlic\" },\n              { id: 22, name: \"Sausage\" },\n              { id: 23, name: \"Scallions\" },\n              { id: 24, name: \"Spicy Pulled Pork\" },\n              { id: 25, name: \"Spinach\" },\n              { id: 26, name: \"Sriracha Chicken\" },\n              { id: 27, name: \"Tomato\" },\n              { id: 28, name: \"Vidalia Onion\" },\n            ]}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    pizzaSize: state.pizzas.pizzaSize,\n    crustType: state.pizzas.crustType,\n    pizzaList: state.pizzas.pizzaList,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    chooseSize: (sizeId) => dispatch(chooseSize(sizeId)),\n    chooseCrust: (sizeId) => dispatch(chooseCrust(sizeId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Order);\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <div>404</div>;\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Navbar, Container, Image } from \"react-bootstrap\";\n\nconst Nav = () => {\n  const history = useHistory();\n\n  const handleHomeUrl = () => {\n    history.push(\"/icarb\");\n  };\n\n  return (\n    <Navbar expand=\"sm\" bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand\n          onClick={handleHomeUrl}\n          className=\"w-100 d-flex justify-content-between align-items-center\"\n        >\n          <span>\n            <Image\n              className=\"pr-2 pb-1\"\n              src=\"/icarb/pizza.svg\"\n              style={{ height: \"1.5em\" }}\n            />{\" \"}\n            iCarb\n          </span>\n          <svg\n            className=\"bi bi-bag-fill\"\n            width=\"1em\"\n            height=\"1em\"\n            viewBox=\"0 0 16 16\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path d=\"M1 4h14v10a2 2 0 01-2 2H3a2 2 0 01-2-2V4zm7-2.5A2.5 2.5 0 005.5 4h-1a3.5 3.5 0 117 0h-1A2.5 2.5 0 008 1.5z\" />\n          </svg>\n        </Navbar.Brand>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"react-bootstrap\";\n\nconst Checkout = (props) => {\n  const displayPizzas = props.pizzaList.map((pizza) => {\n    return (\n      <div key={pizza.id}>\n        {pizza.id} {pizza.name}\n      </div>\n    );\n  });\n  return <Container>Hello from checkout!{displayPizzas}</Container>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    pizzaList: state.pizzas.pizzaList,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Checkout);\n","import React from \"react\";\nimport \"./App.scss\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport Home from \"./components/Home\";\nimport Order from \"./components/Order\";\nimport NotFound from \"./components/NotFound\";\nimport Nav from \"./components/Nav\";\nimport Checkout from \"./components/Checkout\";\n\nconst App = (props) => {\n  return (\n    <Provider store={props.store}>\n      <Router>\n        <Route component={Nav} path=\"/icarb\" />\n        <Switch>\n          <Route component={Home} exact path=\"/icarb\" />\n          <Route component={Order} exact path=\"/icarb/pizza/:id\" />\n          <Route component={Checkout} exact path=\"/icarb/checkout\" />\n          <Route component={NotFound} path=\"/icarb/\" />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport { pizzas } from \"../modules/pizzas\";\n\nconst rootReducer = combineReducers({\n  pizzas,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configureStore from \"./store/configureStore\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App store={store} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore } from \"redux\";\nimport rootReducer from \"./rootReducer\";\n\nlet configureStore = () => {\n  let store = createStore(rootReducer);\n  return store;\n};\n\nexport default configureStore;\n"],"sourceRoot":""}